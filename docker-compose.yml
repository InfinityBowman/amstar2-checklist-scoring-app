services:
  postgres:
    image: postgres:16-alpine
    container_name: corates_postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '54321:5432'
    tmpfs:
      # - /var/lib/postgresql/data
      - /tmp
    command:
      - -c
      - listen_addresses=*
      - -c
      - wal_level=logical
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: corates_backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - API_PREFIX=${API_PREFIX}
      - ENV=${ENV}
      - LOG_LEVEL=${LOG_LEVEL}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '8000:8000'
    working_dir: /app
    command: sh -c "alembic -c alembic.ini upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    volumes:
      - ./backend:/app

  electric:
    image: docker.io/electricsql/electric:latest
    environment:
      DATABASE_URL: postgresql://corates:password@postgres:5432/corates?sslmode=disable
      # Not suitable for production. Only use insecure mode in development or if you've otherwise secured the Electric API.
      # See https://electric-sql.com/docs/guides/security
      ELECTRIC_INSECURE: true
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy

  bun-proxy:
    build:
      context: ./backend-js
      dockerfile: Dockerfile
    container_name: corates_bun_proxy
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - ELECTRIC_URL=http://electric:3000
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - API_PREFIX=/api/v1
      - PORT=3004
    depends_on:
      - electric
    ports:
      - '3004:3004'
    working_dir: /app
    command: bun run dev
    volumes:
      - ./backend-js:/app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: corates_frontend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - VITE_API_URL=${VITE_API_URL}
    ports:
      - '5173:5173'
    depends_on:
      - backend
    working_dir: /src
    command: sh -c "npm run dev -- --host 0.0.0.0"

volumes:
  pgdata:
